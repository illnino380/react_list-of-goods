{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","preparedGoods","map","good","index","goodName","id","App","state","isStarted","isReversed","sortType","NONE","this","goods","visibleGoods","ALPABET","sort","a","b","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","onClick","setState","uuidv4","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKA6BKA,E,0FAPCC,EAlBkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAQ4CC,KAAI,SAACC,EAAMC,GACvD,MAAO,CACLC,SAAUF,EACVG,GAAIF,O,SAIHJ,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KA0CE,IAAMO,EAAb,4MACEC,MAAyB,CACvBC,WAAW,EACXC,YAAY,EACZC,SAAUX,EAASY,MAJvB,4CAOE,WAAU,IAAD,OACP,EAIIC,KAAKL,MAHPC,EADF,EACEA,UACAC,EAFF,EAEEA,WACAC,EAHF,EAGEA,SAGIG,EAlDV,SACEA,EACAH,EACAD,GAEA,IAAMK,EAAY,YAAOD,GAEzB,OAAQH,GACN,KAAKX,EAASgB,QACZD,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAChBD,EAAEb,SAASe,cAAcD,EAAEd,aAE7B,MAEF,KAAKL,EAASqB,OACZN,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAChBD,EAAEb,SAASiB,OAASH,EAAEd,SAASiB,UAInC,KAAKtB,EAASY,MAKhB,OAAOF,EACHK,EAAaQ,UACbR,EAuBYS,CACZvB,EACAU,EACAD,GAGF,OACE,qBAAKe,UAAU,MAAf,SACE,qBAAKA,UAAU,MAAf,SACIhB,EAkBE,qCACE,sBAAKgB,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAU,SACVE,QAAS,kBAAM,EAAKC,SAClB,CAAEjB,SAAUX,EAASgB,WAJzB,iCAUA,wBACEU,KAAK,SACLD,UAAU,SACVE,QAAS,kBAAM,EAAKC,SAClB,CAAEjB,SAAUX,EAASqB,UAJzB,4BAUA,wBACEK,KAAK,SACLD,UAAU,SACVE,QAAS,kBAAM,EAAKC,UAAS,SAAApB,GAAK,MAChC,CAAEE,YAAaF,EAAME,gBAJzB,qBAUA,wBACEgB,KAAK,SACLD,UAAU,8BAKVE,QAAS,kBAAM,EAAKC,SAAS,CAC3BlB,YAAY,EACZC,SAAUX,EAASY,QATvB,sBAgBF,oBAAIa,UAAU,QAAd,SACGX,EAAMZ,KAAI,SAAAC,GAAI,OACb,oBAEEsB,UAAU,cAFZ,SAIGtB,EAAKE,UAHDwB,uBAnEb,wBACEH,KAAK,SACLD,UAAU,wCAMVE,QAAS,kBAAM,EAAKC,SAClB,CAAEnB,WAAW,KATjB,2BAzBd,GAAyBqB,IAAMC,WCpE/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ee64550c.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ninterface Good {\n  goodName: string,\n  id: number,\n}\n\nconst preparedGoods: Good[] = goodsFromServer.map((good, index) => {\n  return {\n    goodName: good,\n    id: index,\n  };\n});\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\nfunction getReorderedGoods(\n  goods: Good[],\n  sortType: SortType,\n  isReversed: boolean,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPABET:\n      visibleGoods.sort((a, b) => (\n        a.goodName.localeCompare(b.goodName)\n      ));\n      break;\n\n    case SortType.LENGTH:\n      visibleGoods.sort((a, b) => (\n        a.goodName.length - b.goodName.length\n      ));\n      break;\n\n    case SortType.NONE:\n    default:\n      break;\n  }\n\n  return isReversed\n    ? visibleGoods.reverse()\n    : visibleGoods;\n}\n\ntype State = {\n  isStarted: boolean,\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    isStarted: false,\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  render() {\n    const {\n      isStarted,\n      isReversed,\n      sortType,\n    } = this.state;\n\n    const goods = getReorderedGoods(\n      preparedGoods,\n      sortType,\n      isReversed,\n    );\n\n    return (\n      <div className=\"App\">\n        <div className=\"box\">\n          {!isStarted\n            ? (\n              <button\n                type=\"button\"\n                className=\"\n                    button\n                    is-primary\n                    is-large\n                    is-light\n                  \"\n                onClick={() => this.setState(\n                  { isStarted: true },\n                )}\n              >\n                Start\n              </button>\n            )\n            : (\n              <>\n                <div className=\"buttons\">\n                  <button\n                    type=\"button\"\n                    className=\"button\"\n                    onClick={() => this.setState(\n                      { sortType: SortType.ALPABET },\n                    )}\n                  >\n                    Sort alphabetically\n                  </button>\n\n                  <button\n                    type=\"button\"\n                    className=\"button\"\n                    onClick={() => this.setState(\n                      { sortType: SortType.LENGTH },\n                    )}\n                  >\n                    Sort by length\n                  </button>\n\n                  <button\n                    type=\"button\"\n                    className=\"button\"\n                    onClick={() => this.setState(state => (\n                      { isReversed: !state.isReversed }\n                    ))}\n                  >\n                    Reverse\n                  </button>\n\n                  <button\n                    type=\"button\"\n                    className=\"\n                      button\n                      is-danger\n                      is-light\n                    \"\n                    onClick={() => this.setState({\n                      isReversed: false,\n                      sortType: SortType.NONE,\n                    })}\n                  >\n                    Reset\n                  </button>\n                </div>\n\n                <ul className=\"Goods\">\n                  {goods.map(good => (\n                    <li\n                      key={uuidv4()}\n                      className=\"Goods__item\"\n                    >\n                      {good.goodName}\n                    </li>\n                  ))}\n                </ul>\n              </>\n            )}\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}