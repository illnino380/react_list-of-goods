{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","preparedGoods","map","good","index","goodName","id","getReorderedGoods","goods","sortType","isReversed","visibleGoods","NONE","sort","goodA","goodB","firstGood","secondGood","ALPABET","localeCompare","LENGTH","length","reverse","App","state","isStarted","this","className","type","onClick","setState","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKA4BKA,E,kFAPCC,EAlBkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAQ4CC,KAAI,SAACC,EAAMC,GACvD,MAAO,CACLC,SAAUF,EACVG,GAAIF,MAUR,SAASG,EACPC,EACAC,EACAC,GAEA,IAAMC,EAAY,YAAOH,GAoBzB,OAlBIC,IAAaT,EAASY,MACxBD,EAAaE,MAAK,SAACC,EAAOC,GACxB,IAAMC,EAAYF,EAAMT,SAClBY,EAAaF,EAAMV,SAEzB,OAAQI,GACN,KAAKT,EAASkB,QACZ,OAAOF,EAAUG,cAAcF,GAEjC,KAAKjB,EAASoB,OACZ,OAAOJ,EAAUK,OAASJ,EAAWI,OAEvC,QACE,OAAO,MAKRX,EACHC,EAAaW,UACbX,G,SAjCDX,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KA0CE,IAAMuB,EAAb,4MACEC,MAAyB,CACvBC,WAAW,EACXf,YAAY,EACZD,SAAUT,EAASY,MAJvB,4CAOE,WAAU,IAAD,OACP,EAIIc,KAAKF,MAHPC,EADF,EACEA,UACAf,EAFF,EAEEA,WACAD,EAHF,EAGEA,SAGF,OACE,qBAAKkB,UAAU,MAAf,SACE,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,UAAf,SACIF,EAgBE,qCACE,wBACEG,KAAK,SACLD,UAAU,SACVE,QAAS,kBAAM,EAAKC,SAClB,CAAErB,SAAUT,EAASkB,WAJzB,iCAUA,wBACEU,KAAK,SACLD,UAAU,SACVE,QAAS,kBAAM,EAAKC,SAAS,CAAErB,SAAUT,EAASoB,UAHpD,4BAQA,wBACEQ,KAAK,SACLD,UAAU,SACVE,QAAS,kBAAM,EAAKC,UAAS,SAAAN,GAAK,MAAK,CACrCd,YAAac,EAAMd,gBAJvB,qBAUA,wBACEkB,KAAK,SACLD,UAAU,8BAKVE,QAAS,kBAAM,EAAKC,SAAS,CAC3BpB,YAAY,EACZD,SAAUT,EAASY,QATvB,sBA3CF,wBACEgB,KAAK,SACLD,UAAU,wCAMVE,QAAS,kBAAM,EAAKC,SAAS,CAAEL,WAAW,KAR5C,qBA6DLA,GACC,oBAAIE,UAAU,QAAd,SACGpB,EACCN,EACAQ,EACAC,GACAR,KAAI,SAAAC,GAAI,OACR,oBAEEwB,UAAU,cAFZ,SAIGxB,EAAKE,UAHDF,EAAKG,kBAzF5B,GAAyByB,IAAMC,WCnE/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d476c63e.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ninterface Good {\n  goodName: string,\n  id: number,\n}\n\nconst preparedGoods: Good[] = goodsFromServer.map((good, index) => {\n  return {\n    goodName: good,\n    id: index,\n  };\n});\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\nfunction getReorderedGoods(\n  goods: Good[],\n  sortType: SortType,\n  isReversed: boolean,\n) {\n  const visibleGoods = [...goods];\n\n  if (sortType !== SortType.NONE) {\n    visibleGoods.sort((goodA, goodB): number => {\n      const firstGood = goodA.goodName;\n      const secondGood = goodB.goodName;\n\n      switch (sortType) {\n        case SortType.ALPABET:\n          return firstGood.localeCompare(secondGood);\n\n        case SortType.LENGTH:\n          return firstGood.length - secondGood.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  return isReversed\n    ? visibleGoods.reverse()\n    : visibleGoods;\n}\n\ntype State = {\n  isStarted: boolean,\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    isStarted: false,\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  render() {\n    const {\n      isStarted,\n      isReversed,\n      sortType,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"box\">\n          <div className=\"buttons\">\n            {!isStarted\n              ? (\n                <button\n                  type=\"button\"\n                  className=\"\n                    button\n                    is-primary\n                    is-large\n                    is-light\n                  \"\n                  onClick={() => this.setState({ isStarted: true })}\n                >\n                  Start\n                </button>\n              )\n              : (\n                <>\n                  <button\n                    type=\"button\"\n                    className=\"button\"\n                    onClick={() => this.setState(\n                      { sortType: SortType.ALPABET },\n                    )}\n                  >\n                    Sort alphabetically\n                  </button>\n\n                  <button\n                    type=\"button\"\n                    className=\"button\"\n                    onClick={() => this.setState({ sortType: SortType.LENGTH })}\n                  >\n                    Sort by length\n                  </button>\n\n                  <button\n                    type=\"button\"\n                    className=\"button\"\n                    onClick={() => this.setState(state => ({\n                      isReversed: !state.isReversed,\n                    }))}\n                  >\n                    Reverse\n                  </button>\n\n                  <button\n                    type=\"button\"\n                    className=\"\n                      button\n                      is-danger\n                      is-light\n                    \"\n                    onClick={() => this.setState({\n                      isReversed: false,\n                      sortType: SortType.NONE,\n                    })}\n                  >\n                    Reset\n                  </button>\n                </>\n              )}\n          </div>\n\n          {isStarted && (\n            <ul className=\"Goods\">\n              {getReorderedGoods(\n                preparedGoods,\n                sortType,\n                isReversed,\n              ).map(good => (\n                <li\n                  key={good.id}\n                  className=\"Goods__item\"\n                >\n                  {good.goodName}\n                </li>\n              ))}\n            </ul>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}